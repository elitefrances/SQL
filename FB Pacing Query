/**************************
Facebook Pacing Queries
**************************/

-- Chop "_Sup" from additonal campaigns to help matching

update FBRaw
set campaign = replace(campaign, concat('_', substring_index((campaign), '_', -1)),'')
where campaign like "%_Sup";

-- Create Pacing Sheet

SET time_zone = `America/Los_Angeles`;
drop table `FB Tracking`;
create table `FB Tracking` as
select Final.Advertiser,
Final.Campaign,
Final.Market,
Final.Organization,
Final.Platform,
Final.`Live Date`,
Final.`End Date`,
Final.`Analyst`,
Final.`AM Team`,
Final.`AM Status`,
CASE 
     WHEN Final.`AM Status` LIKE 'live%' AND STR_TO_DATE(Final.`Live Date`, '%m/%d/%Y') < CURDATE() AND STR_TO_DATE(Final.`End Date`, '%m/%d/%Y') >= CURDATE() AND Yesterday.Impressions < 10 THEN 0
     WHEN (Final.`Live Date` IS NULL OR Final.`Live Date` = '') AND Yesterday.Impressions > 0 THEN 1
     WHEN Final.`AM Status` NOT LIKE 'live%' AND Yesterday.Impressions > 0 THEN 3
     ELSE 4
END AS Abnormal,
Final.Impressions,
Final.`Updated Aug Goal`,
GREATEST(CAST(((Final.`Days Passed`)/Final.`Monthly Days`) * Final.`Updated Aug Goal` as signed),0) as Expected,
CAST(CASE WHEN STR_TO_DATE(Final.`End Date`, '%m/%d/%Y') < CURDATE() THEN Final.Impressions/CAST(Final.`Updated Aug Goal` as signed)
ELSE Final.Impressions/CAST(((Final.`Days Passed`)/Final.`Monthly Days`) * Final.`Updated Aug Goal` as signed)
END as CHAR(4)) as Delta,
CAST(Final.Clicks/Final.Impressions*100 as DECIMAL(10,4)) as `Aug CTR`,
Final.`July CTR` as `July CTR`,
CAST((Yesterday.Clicks + TwoDays.Clicks + ThreeDays.Clicks) / (Yesterday.Impressions + TwoDays.Impressions + ThreeDays.Impressions) *100 as DECIMAL(10,3)) as `L3D CTR`,
GREATEST(CAST((Final.`Updated Aug Goal`-Final.Impressions)/(Final.`Monthly Days` - (Final.`Days Passed`)) as signed),0) as DailyRemaining,
Yesterday.Impressions as Yesterday,
TwoDays.Impressions As `Two Days Ago`,
ThreeDays.Impressions As `Three Days Ago`,
CAST(Final.CPM as Decimal(10,2)) as CPM,
Final.Notes,
`Tier` as `Tier`
from

(Select a.Advertiser,
a.Campaign,
a.Market,
a.Organization,
a.Platform,
a.`Live Date`,
a.`End Date`,
a.Analyst,
a.`AM Team`,
a.`AM Status`,
a.`Tier`,
a.`Updated Aug Goal`,
(DAY(CURDATE()) - DAY(GREATEST(CAST(DATE_FORMAT(NOW() ,'%Y-%m-01') as DATE),
STR_TO_DATE(a.`Live Date`, '%m/%d/%Y')))) as `Days Passed`,
(DAY(LEAST(LAST_DAY(CURDATE()), STR_TO_DATE(a.`End Date`, '%m/%d/%Y'))) - DAY(GREATEST(CAST(DATE_FORMAT(NOW() ,'%Y-%m-01') as DATE), STR_TO_DATE(a.`Live Date`, '%m/%d/%Y'))) + 1) as `Monthly Days`,
a.`June CTR`,
a.`July CTR`,
a.Notes,
sum(b.`Amount Spent (USD)`)*1000/sum(b.Impressions) as CPM,
sum(b.Impressions) as Impressions,
sum(b.`Clicks (All)`) as Clicks
from `Pacing Monthly Goals` a
left join `FBRaw` b
on a.Campaign = b.campaign
where Platform like "%FACEBOOK%"
and (`Reporting Starts` != current_date || `Reporting Starts` is NULL)
group by 1,2,3,4,5,6,7,8,9,10,11,12
order by 5
) as Final

left join
(select campaign, sum(Impressions) as Impressions, sum(`Clicks (All)`) as Clicks FROM `FBRaw`
WHERE `Reporting Starts` = subdate(current_date, 1)
group by 1) as Yesterday
on Final.Campaign = Yesterday.campaign
left join
(select campaign, sum(Impressions) as Impressions, sum(`Clicks (All)`) as Clicks FROM `FBRaw`
WHERE `Reporting Starts` = subdate(current_date, 2)
group by 1) as TwoDays
on Final.Campaign = TwoDays.campaign
left join
(select campaign, sum(Impressions) as Impressions, sum(`Clicks (All)`) as Clicks FROM `FBRaw`
WHERE `Reporting Starts` = subdate(current_date, 3)
group by 1) as ThreeDays
on Final.Campaign = ThreeDays.campaign
group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14;
